{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/Monica's Task/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { SongList } from \"./components/SongList\";\nimport { MusicUploadForm } from \"./components/MusicUploadForm\";\nimport { SongContext } from \"./SongContext\";\nimport { PlayAllButtons } from \"./components/PlayAllButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songList, setSongList] = useState([{\n    songName: \"Halo\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 1,\n    file: \"/music/music1.mp3\"\n  }, {\n    songName: \"Blind\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 2,\n    file: \"/music/music2.mp3\"\n  }, {\n    songName: \"Twin Flames\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 3,\n    file: \"/music/music3.mp3\"\n  }, {\n    songName: \"Left to Hurt\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 4,\n    file: \"/music/music4.mp3\"\n  }, {\n    songName: \"Starlight\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 5,\n    file: \"/music/music5.mp3\"\n  }, {\n    songName: \"Modern Disbelief\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 6,\n    file: \"/music/music6.mp3\"\n  }]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1);\n  const [currentSong, setCurrentSong] = useState(null);\n  const pushItem = newSong => {\n    setSongList(prevSongLists => [...prevSongLists, newSong]);\n  };\n  const handleTogglePlay = index => {\n    var _songList$index;\n    const audioUrl = (_songList$index = songList[index]) === null || _songList$index === void 0 ? void 0 : _songList$index.file;\n    currentSong === null || currentSong === void 0 ? void 0 : currentSong.pause();\n    if (index == currentSongIndex) {\n      setCurrentSongIndex(-1);\n    } else if (audioUrl) {\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setCurrentSong(audio);\n      setCurrentSongIndex(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SongContext.Provider, {\n      value: {\n        songList,\n        setSongList,\n        pushItem,\n        currentSongIndex,\n        setCurrentSongIndex,\n        currentSong,\n        handleTogglePlay,\n        inputValue,\n        setInputValue\n      },\n      children: [/*#__PURE__*/_jsxDEV(PlayAllButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        inputValue: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MusicUploadForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"deoZ2qjAf/1Sl4Utx+vwqRvZPHM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","SongList","MusicUploadForm","SongContext","PlayAllButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","songList","setSongList","songName","artistName","trackNumber","file","inputValue","setInputValue","currentSongIndex","setCurrentSongIndex","currentSong","setCurrentSong","pushItem","newSong","prevSongLists","handleTogglePlay","index","_songList$index","audioUrl","pause","audio","Audio","play","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/monica/Desktop/Monica's Task/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport { SongList } from \"./components/SongList\";\nimport { Song } from \"./types\";\nimport { MusicUploadForm } from \"./components/MusicUploadForm\";\nimport { SongContext } from \"./SongContext\";\nimport { PlayAllButtons } from \"./components/PlayAllButtons\";\n\nfunction App() {\n  const [songList, setSongList] = useState<Song[]>([\n    {\n      songName: \"Halo\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 1,\n      file: \"/music/music1.mp3\",\n    },\n    {\n      songName: \"Blind\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 2,\n      file: \"/music/music2.mp3\",\n    },\n    {\n      songName: \"Twin Flames\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 3,\n      file: \"/music/music3.mp3\",\n    },\n    {\n      songName: \"Left to Hurt\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 4,\n      file: \"/music/music4.mp3\",\n    },\n    {\n      songName: \"Starlight\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 5,\n      file: \"/music/music5.mp3\",\n    },\n    {\n      songName: \"Modern Disbelief\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 6,\n      file: \"/music/music6.mp3\",\n    },\n  ]);\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1);\n  const [currentSong, setCurrentSong] = useState<HTMLAudioElement | null>(null);\n\n  const pushItem = (newSong: Song) => {\n    setSongList((prevSongLists: Song[]) => [...prevSongLists, newSong]);\n  };\n  const handleTogglePlay = (index: number) => {\n    const audioUrl = songList[index]?.file;\n    currentSong?.pause();\n    if (index == currentSongIndex) {\n      setCurrentSongIndex(-1);\n    } else if (audioUrl) {\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setCurrentSong(audio);\n      setCurrentSongIndex(index);\n    }\n  };\n  return (\n    <>\n      <SongContext.Provider\n        value={{\n          songList,\n          setSongList,\n          pushItem,\n          currentSongIndex,\n          setCurrentSongIndex,\n          currentSong,\n          handleTogglePlay,\n          inputValue,\n          setInputValue,\n\n\n        }}\n      >\n        <PlayAllButtons/>\n        <SongList inputValue={inputValue} />\n        <MusicUploadForm />\n      </SongContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,uBAAuB;AAEhD,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAS,CAC/C;IACEa,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,qBAAqB;IACjCC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,QAAQ,EAAE,OAAO;IACjBC,UAAU,EAAE,qBAAqB;IACjCC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,QAAQ,EAAE,aAAa;IACvBC,UAAU,EAAE,qBAAqB;IACjCC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,QAAQ,EAAE,cAAc;IACxBC,UAAU,EAAE,qBAAqB;IACjCC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,QAAQ,EAAE,WAAW;IACrBC,UAAU,EAAE,qBAAqB;IACjCC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,QAAQ,EAAE,kBAAkB;IAC5BC,UAAU,EAAE,qBAAqB;IACjCC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE;EACR,CAAC,CACF,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAA0B,IAAI,CAAC;EAE7E,MAAMuB,QAAQ,GAAIC,OAAa,IAAK;IAClCZ,WAAW,CAAEa,aAAqB,IAAK,CAAC,GAAGA,aAAa,EAAED,OAAO,CAAC,CAAC;EACrE,CAAC;EACD,MAAME,gBAAgB,GAAIC,KAAa,IAAK;IAAA,IAAAC,eAAA;IAC1C,MAAMC,QAAQ,IAAAD,eAAA,GAAGjB,QAAQ,CAACgB,KAAK,CAAC,cAAAC,eAAA,uBAAfA,eAAA,CAAiBZ,IAAI;IACtCK,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES,KAAK,CAAC,CAAC;IACpB,IAAIH,KAAK,IAAIR,gBAAgB,EAAE;MAC7BC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM,IAAIS,QAAQ,EAAE;MACnB,MAAME,KAAK,GAAG,IAAIC,KAAK,CAACH,QAAQ,CAAC;MACjCE,KAAK,CAACE,IAAI,CAAC,CAAC;MACZX,cAAc,CAACS,KAAK,CAAC;MACrBX,mBAAmB,CAACO,KAAK,CAAC;IAC5B;EACF,CAAC;EACD,oBACErB,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACE5B,OAAA,CAACH,WAAW,CAACgC,QAAQ;MACnBC,KAAK,EAAE;QACLzB,QAAQ;QACRC,WAAW;QACXW,QAAQ;QACRJ,gBAAgB;QAChBC,mBAAmB;QACnBC,WAAW;QACXK,gBAAgB;QAChBT,UAAU;QACVC;MAGF,CAAE;MAAAgB,QAAA,gBAEF5B,OAAA,CAACF,cAAc;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjBlC,OAAA,CAACL,QAAQ;QAACgB,UAAU,EAAEA;MAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpClC,OAAA,CAACJ,eAAe;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACvB,CAAC;AAEP;AAAC9B,EAAA,CAjFQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAmFZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}