{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/Monica's Task/src/components/PlayAllButtons.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { faPause, faPlay, faCaretDown, faPlus, faUpRightAndDownLeftFromCenter, faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"../styled_components/Button\";\nimport { StyledIcon } from \"../styled_components/Icon\";\nimport { SongList } from \"./SongList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayAllButtons = ({\n  songList\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [sorted, setSorted] = useState(true);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1);\n  const [currentSong, setCurrentSong] = useState(null);\n  const handleTogglePlay = index => {\n    var _songList$index;\n    const audioUrl = (_songList$index = songList[index]) === null || _songList$index === void 0 ? void 0 : _songList$index.file;\n    currentSong === null || currentSong === void 0 ? void 0 : currentSong.pause();\n    if (index == currentSongIndex) {\n      setCurrentSongIndex(-1);\n    } else if (audioUrl) {\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setCurrentSong(audio);\n      setCurrentSongIndex(index);\n    }\n  };\n  const pushItem = newSong => {\n    setSongList(prevSongLists => [...prevSongLists, newSong]);\n  };\n  const handlePlayAll = () => {\n    if (isPlaying) {\n      currentSong === null || currentSong === void 0 ? void 0 : currentSong.pause();\n      setCurrentSongIndex(-1);\n    } else {\n      handleTogglePlay(0);\n    }\n    setIsPlaying(!isPlaying);\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        console.log(currentSong === null || currentSong === void 0 ? void 0 : currentSong.currentTime, currentSong === null || currentSong === void 0 ? void 0 : currentSong.duration);\n        if (currentSong && Number(currentSong === null || currentSong === void 0 ? void 0 : currentSong.currentTime) >= Number(currentSong === null || currentSong === void 0 ? void 0 : currentSong.duration)) {\n          if (currentSongIndex < songList.length - 1) {\n            handleTogglePlay(currentSongIndex + 1);\n          } else {\n            handlePlayAll();\n          }\n        }\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  });\n  const sortSongs = () => {\n    setSongList([...songList.sort((a, b) => sorted ? a.trackNumber - b.trackNumber : b.trackNumber - a.trackNumber)]);\n    setSorted(!sorted);\n  };\n  return /*#__PURE__*/_jsxDEV(SongContext.Provider, {\n    value: {\n      songList,\n      pushItem,\n      handleTogglePlay,\n      currentSongIndex\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        padding: \"10px 0\",\n        background: \"#d3d3d3b5\",\n        width: \"90%\",\n        color: \"#5a5959\",\n        textAlign: \"start\",\n        fontWeight: \"bold\",\n        fontSize: \"13px\",\n        fontFamily: \"Arial,Helvetica,sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePlayAll,\n          $primary: true,\n          children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: isPlaying ? faPause : faPlay,\n            $primary: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), \"Play All\", /*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: faCaretDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          $primary: true,\n          children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), \"Add All\", /*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: faCaretDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          $primary: true,\n          onClick: sortSongs,\n          children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: faUpRightAndDownLeftFromCenter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), \"Track Nu...\", /*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: faCaretDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: faMagnifyingGlass,\n            style: {\n              position: \"absolute\",\n              right: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            style: {\n              padding: \"0.5em 1em\",\n              borderRadius: \"25px\",\n              border: \"1px solid\"\n            },\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            placeholder: \"Search song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SongList, {\n      inputValue: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayAllButtons, \"fGb6ts/BYo0VjtLbkP1fcrOauFE=\");\n_c = PlayAllButtons;\nvar _c;\n$RefreshReg$(_c, \"PlayAllButtons\");","map":{"version":3,"names":["useEffect","useState","faPause","faPlay","faCaretDown","faPlus","faUpRightAndDownLeftFromCenter","faMagnifyingGlass","Button","StyledIcon","SongList","jsxDEV","_jsxDEV","PlayAllButtons","songList","_s","isPlaying","setIsPlaying","sorted","setSorted","inputValue","setInputValue","currentSongIndex","setCurrentSongIndex","currentSong","setCurrentSong","handleTogglePlay","index","_songList$index","audioUrl","file","pause","audio","Audio","play","pushItem","newSong","setSongList","prevSongLists","handlePlayAll","timer","setInterval","console","log","currentTime","duration","Number","length","clearInterval","sortSongs","sort","a","b","trackNumber","SongContext","Provider","value","children","style","display","justifyContent","flexWrap","padding","background","width","color","textAlign","fontWeight","fontSize","fontFamily","onClick","$primary","icon","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","position","right","type","borderRadius","border","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/monica/Desktop/Monica's Task/src/components/PlayAllButtons.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport {\n  faPause,\n  faPlay,\n  faCaretDown,\n  faPlus,\n  faUpRightAndDownLeftFromCenter,\n  faMagnifyingGlass,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Song } from \"../types\";\nimport { Button } from \"../styled_components/Button\";\nimport { StyledIcon } from \"../styled_components/Icon\";\nimport { SongList } from \"./SongList\";\n\n\n\ninterface PlayAllButtonProps {\n  songList: Song[];\n}\n\nexport const PlayAllButtons: FC<PlayAllButtonProps> = ({songList}) => {\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const [sorted, setSorted] = useState<boolean>(true);\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1);\n  const [currentSong, setCurrentSong] = useState<HTMLAudioElement | null>(null);\n  const handleTogglePlay = (index: number) => {\n    const audioUrl = songList[index]?.file;\n    currentSong?.pause();\n    if (index == currentSongIndex) {\n      setCurrentSongIndex(-1);\n    } else if (audioUrl) {\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setCurrentSong(audio);\n      setCurrentSongIndex(index);\n    }\n  };\n  const pushItem = (newSong: Song) => {\n    setSongList((prevSongLists: Song[]) => [...prevSongLists, newSong]);\n  };\n  const handlePlayAll = () => {\n    if (isPlaying) {\n      currentSong?.pause();\n      setCurrentSongIndex(-1);\n    } else {\n      handleTogglePlay(0);\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        console.log(currentSong?.currentTime, currentSong?.duration);\n        if (\n          currentSong &&\n          Number(currentSong?.currentTime) >= Number(currentSong?.duration)\n        ) {\n          if (currentSongIndex < songList.length - 1) {\n            handleTogglePlay(currentSongIndex + 1);\n          } else {\n            handlePlayAll();\n          }\n        }\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  });\n  const sortSongs = () => {\n    setSongList([\n      ...songList.sort((a, b) =>\n        sorted ? a.trackNumber - b.trackNumber : b.trackNumber - a.trackNumber\n      ),\n    ]);\n    setSorted(!sorted);\n  };\n  return (\n    <SongContext.Provider\n    value={{ songList, pushItem, handleTogglePlay, currentSongIndex }}\n  >\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        padding: \"10px 0\",\n        background: \"#d3d3d3b5\",\n        width: \"90%\",\n        color: \"#5a5959\",\n        textAlign: \"start\",\n        fontWeight: \"bold\",\n        fontSize: \"13px\",\n        fontFamily: \"Arial,Helvetica,sans-serif\",\n      }}\n    >\n      <div style={{ display: \"flex\" }}>\n            <Button onClick={handlePlayAll} $primary>\n              <StyledIcon icon={isPlaying ? faPause : faPlay} $primary />\n              Play All\n              <StyledIcon icon={faCaretDown} />\n            </Button>\n            <Button $primary>\n              <StyledIcon icon={faPlus} />\n              Add All\n              <StyledIcon icon={faCaretDown} />\n            </Button>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <Button $primary onClick={sortSongs}>\n              <StyledIcon icon={faUpRightAndDownLeftFromCenter} />\n              Track Nu...\n              <StyledIcon icon={faCaretDown} />\n            </Button>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                position: \"relative\",\n              }}\n            >\n              <StyledIcon\n                icon={faMagnifyingGlass}\n                style={{ position: \"absolute\", right: \"5px\" }}\n              />\n              <input\n                type=\"search\"\n                style={{\n                  padding: \"0.5em 1em\",\n                  borderRadius: \"25px\",\n                  border: \"1px solid\",\n                }}\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                placeholder=\"Search song\"\n              />\n            </div>\n          </div>\n        </div>\n        <SongList inputValue={inputValue} />\n      </SongContext.Provider>\n\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}