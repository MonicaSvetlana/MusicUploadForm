{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/Monica's Task/src/components/MusicUploadForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"../styled_components/Button\";\nimport { StyledAlert, StyledForm, StyledInput, StyledLabel } from \"../styled_components/StyledForm\";\nimport { SongContext } from \"../SongContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MusicUploadForm = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n  const {\n    songList,\n    pushItem\n  } = useContext(SongContext);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues,\n    reset\n  } = useForm();\n  const save = data => {\n    let song = data.file[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(song);\n    reader.onload = () => {\n      let songData = {\n        ...data,\n        file: reader.result\n      };\n      pushItem(songData);\n      reset();\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledForm, {\n      onSubmit: handleSubmit(save),\n      children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n        htmlFor: \"trackNumber\",\n        children: \"Track Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"text\",\n        id: \"trackNumber\",\n        placeholder: \"Enter the track number\",\n        ...register(\"trackNumber\", {\n          required: \"Fill fields\",\n          pattern: {\n            value: /\\d+/,\n            message: \"Please enter a numberic value.\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), errors.trackNumber && /*#__PURE__*/_jsxDEV(StyledAlert, {\n        children: [\" \", errors.trackNumber.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n        htmlFor: \"songName\",\n        children: \"Song Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"text\",\n        id: \"songName\",\n        placeholder: \"Enter the song name\",\n        ...register(\"songName\", {\n          required: \"Fill fields\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), errors.songName && /*#__PURE__*/_jsxDEV(StyledAlert, {\n        children: [\" \", errors.songName.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n        htmlFor: \"artistName\",\n        children: \"Artist Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"text\",\n        id: \"artistName\",\n        placeholder: \"Enter the artist name\",\n        ...register(\"artistName\", {\n          required: \"Fill fields\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), errors.artistName && /*#__PURE__*/_jsxDEV(StyledAlert, {\n        children: [\" \", errors.artistName.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n        htmlFor: \"file\",\n        children: \"Upload file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"file\",\n        id: \"file\",\n        placeholder: \"Upload a file\",\n        accept: \"audio/mp3, audio/wav\",\n        ...register(\"file\", {\n          required: \"Fill fields\",\n          validate(val) {\n            console.log(val);\n            const format = [\"audio/mpeg\", \"audio/wav\"];\n            if (!format.includes(val[0].type)) {\n              return \"Only mp3 or wav\";\n            }\n            return true;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), errors.file && /*#__PURE__*/_jsxDEV(StyledAlert, {\n        children: [\" \", errors.file.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        $primary: true,\n        children: \"Add Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"n8i9+17TJ5FQ0+zo5FR+JB3WUfA=\", false, function () {\n  return [useForm];\n})), \"n8i9+17TJ5FQ0+zo5FR+JB3WUfA=\", false, function () {\n  return [useForm];\n});\n_c2 = MusicUploadForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"MusicUploadForm$React.memo\");\n$RefreshReg$(_c2, \"MusicUploadForm\");","map":{"version":3,"names":["React","useContext","useForm","Button","StyledAlert","StyledForm","StyledInput","StyledLabel","SongContext","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicUploadForm","_s","memo","_c","songList","pushItem","register","handleSubmit","formState","errors","getValues","reset","save","data","song","file","reader","FileReader","readAsDataURL","onload","songData","result","onerror","error","console","log","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","required","pattern","value","message","trackNumber","songName","artistName","accept","validate","val","format","includes","$primary","_c2","$RefreshReg$"],"sources":["/Users/monica/Desktop/Monica's Task/src/components/MusicUploadForm.tsx"],"sourcesContent":["import React, { FC, useContext } from \"react\";\nimport { Song } from \"../types\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"../styled_components/Button\";\nimport {\n  StyledAlert,\n  StyledForm,\n  StyledInput,\n  StyledLabel,\n} from \"../styled_components/StyledForm\";\nimport { SongContext } from \"../SongContext\";\n\ninterface SongForm {\n  songName: string;\n  artistName: string;\n  trackNumber: number;\n  file: FileList;\n}\n\nexport const MusicUploadForm: FC = React.memo(() => {\n  const { songList, pushItem } = useContext(SongContext);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n    reset,\n  } = useForm<SongForm>();\n  const save = (data: SongForm) => {\n    let song: File = data.file[0] as File;\n    let reader = new FileReader();\n    reader.readAsDataURL(song);\n    reader.onload = () => {\n      let songData: Song = {\n        ...data,\n        file: reader.result as string,\n      };\n      pushItem(songData);\n      reset();\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n  };\n \n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit(save)}>\n        <StyledLabel htmlFor=\"trackNumber\">Track Number:</StyledLabel>\n        <StyledInput\n          type=\"text\"\n          id=\"trackNumber\"\n          placeholder=\"Enter the track number\"\n          {...register(\"trackNumber\", {\n            required: \"Fill fields\",\n            pattern: {\n              value: /\\d+/,\n              message: \"Please enter a numberic value.\",\n            },\n          })}\n        />\n        {errors.trackNumber && (\n          <StyledAlert> {errors.trackNumber.message}</StyledAlert>\n        )}\n        <StyledLabel htmlFor=\"songName\">Song Name:</StyledLabel>\n        <StyledInput\n          type=\"text\"\n          id=\"songName\"\n          placeholder=\"Enter the song name\"\n          {...register(\"songName\", { required: \"Fill fields\" })}\n        />\n        {errors.songName && (\n          <StyledAlert> {errors.songName.message}</StyledAlert>\n        )}\n        <StyledLabel htmlFor=\"artistName\">Artist Name:</StyledLabel>\n        <StyledInput\n          type=\"text\"\n          id=\"artistName\"\n          placeholder=\"Enter the artist name\"\n          {...register(\"artistName\", { required: \"Fill fields\" })}\n        />\n        {errors.artistName && (\n          <StyledAlert> {errors.artistName.message}</StyledAlert>\n        )}\n        <StyledLabel htmlFor=\"file\">Upload file:</StyledLabel>\n        <StyledInput\n          type=\"file\"\n          id=\"file\"\n          placeholder=\"Upload a file\"\n          accept=\"audio/mp3, audio/wav\"\n          {...register(\"file\", {\n            required: \"Fill fields\",\n            validate(val) {\n              console.log(val);\n              const format = [\"audio/mpeg\", \"audio/wav\"];\n              if (!format.includes(val[0].type)) {\n                return \"Only mp3 or wav\";\n              }\n              return true;\n            },\n          })}\n        />\n        {errors.file && <StyledAlert> {errors.file.message}</StyledAlert>}\n        <Button $primary>Add Song</Button>\n      </StyledForm>\n    </>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}