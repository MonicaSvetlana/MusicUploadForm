{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Desktop/Monica's Task/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { SongList } from \"./components/SongList\";\nimport { MusicUploadForm } from \"./components/MusicUploadForm\";\nimport { SongContext } from \"./SongContext\";\nimport { PlayAllButtons } from \"./components/PlayAllButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songList, setSongList] = useState([{\n    songName: \"Halo\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 11,\n    file: \"/music/music1.mp3\"\n  }, {\n    songName: \"Blind\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 2,\n    file: \"/music/music2.mp3\"\n  }, {\n    songName: \"Twin Flames\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 1,\n    file: \"/music/music3.mp3\"\n  }, {\n    songName: \"Left to Hurt\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 4,\n    file: \"/music/music4.mp3\"\n  }, {\n    songName: \"Starlight\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 5,\n    file: \"/music/music5.mp3\"\n  }, {\n    songName: \"Modern Disbelief\",\n    artistName: \"Blackbird Blackbird\",\n    trackNumber: 6,\n    file: \"/music/music6.mp3\"\n  }]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [sorted, setSorted] = useState(true);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1);\n  const [currentSong, setCurrentSong] = useState(null);\n  const handleTogglePlay = index => {\n    var _SongList$index;\n    const audioUrl = (_SongList$index = SongList[index]) === null || _SongList$index === void 0 ? void 0 : _SongList$index.file;\n    currentSong === null || currentSong === void 0 ? void 0 : currentSong.pause();\n    if (index == currentSongIndex) {\n      setCurrentSongIndex(-1);\n    } else if (audioUrl) {\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setCurrentSong(audio);\n      setCurrentSongIndex(index);\n    }\n  };\n  const pushItem = newSong => {\n    setSongList(prevSongLists => [...prevSongLists, newSong]);\n  };\n  const handlePlayAll = () => {\n    if (isPlaying) {\n      currentSong === null || currentSong === void 0 ? void 0 : currentSong.pause();\n      setCurrentSongIndex(-1);\n    } else {\n      handleTogglePlay(0);\n    }\n    setIsPlaying(!isPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(SongContext.Provider, {\n      value: {\n        songList,\n        pushItem,\n        handleTogglePlay,\n        currentSongIndex\n      },\n      children: [/*#__PURE__*/_jsxDEV(PlayAllButtons, {\n        songList: songList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        inputValue: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MusicUploadForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jTOHsTtJJZcs1Fd/ngW9YJESebk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","SongList","MusicUploadForm","SongContext","PlayAllButtons","jsxDEV","_jsxDEV","App","_s","songList","setSongList","songName","artistName","trackNumber","file","isPlaying","setIsPlaying","sorted","setSorted","inputValue","setInputValue","currentSongIndex","setCurrentSongIndex","currentSong","setCurrentSong","handleTogglePlay","index","_SongList$index","audioUrl","pause","audio","Audio","play","pushItem","newSong","prevSongLists","handlePlayAll","style","display","flexDirection","flexWrap","alignItems","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/monica/Desktop/Monica's Task/src/App.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { SongList } from \"./components/SongList\";\nimport { Song } from \"./types\";\nimport { MusicUploadForm } from \"./components/MusicUploadForm\";\n\nimport { SongContext } from \"./SongContext\";\nimport { PlayAllButtons } from \"./components/PlayAllButtons\";\n\nfunction App() {\n  const [songList, setSongList] = useState<Song[]>([\n    {\n      songName: \"Halo\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 11,\n      file: \"/music/music1.mp3\",\n    },\n    {\n      songName: \"Blind\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 2,\n      file: \"/music/music2.mp3\",\n    },\n    {\n      songName: \"Twin Flames\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 1,\n      file: \"/music/music3.mp3\",\n    },\n    {\n      songName: \"Left to Hurt\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 4,\n      file: \"/music/music4.mp3\",\n    },\n    {\n      songName: \"Starlight\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 5,\n      file: \"/music/music5.mp3\",\n    },\n    {\n      songName: \"Modern Disbelief\",\n      artistName: \"Blackbird Blackbird\",\n      trackNumber: 6,\n      file: \"/music/music6.mp3\",\n    },\n  ]);\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const [sorted, setSorted] = useState<boolean>(true);\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1);\n  const [currentSong, setCurrentSong] = useState<HTMLAudioElement | null>(null);\n  const handleTogglePlay = (index: number) => {\n    const audioUrl = SongList[index]?.file;\n    currentSong?.pause();\n    if (index == currentSongIndex) {\n      setCurrentSongIndex(-1);\n    } else if (audioUrl) {\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setCurrentSong(audio);\n      setCurrentSongIndex(index);\n    }\n  };\n  const pushItem = (newSong: Song) => {\n    setSongList((prevSongLists: Song[]) => [...prevSongLists, newSong]);\n  };\n  \n  const handlePlayAll = () => {\n    if (isPlaying) {\n      currentSong?.pause();\n      setCurrentSongIndex(-1);\n    } else {\n      handleTogglePlay(0);\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n      }}\n    >\n      <SongContext.Provider value={{ songList, pushItem, handleTogglePlay, currentSongIndex}}\n      >\n      <PlayAllButtons songList={songList}/>\n        <SongList inputValue={inputValue} />\n        <MusicUploadForm />\n      </SongContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}